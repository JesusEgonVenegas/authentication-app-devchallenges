import styles from "../styles/Edit.module.css"
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import { api } from "~/utils/api";

export default function Edit() {
 
  return (
    <>
      <Head>
        <title>Authentication App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
            <AuthShowcase  />
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const [name, setName] = useState('')
  const [email, setEmail] = useState('')
  const [bio, setBio] = useState('')
  const [phone, setPhone] = useState('')
  const [password, setPassword] = useState('')

  // const handleSubmit = async (e) => {
  //     e.preventDefault()
  //     try {
  //         api.updateUser.updateUser.useMutation({
  //             onMutate: async (a) => {
  //                 a.name = name
  //             }
  //         })
  //     } catch(error) {
  //       console.log(error)
  //     }
  // }
  useEffect(() => {
  if (sessionData?.user) {
    setName(sessionData.user.name || '');
    setEmail(sessionData.user.email || '');
    setBio(sessionData.user.bio || '');
    setPhone(sessionData.user.phone || '');
    setPassword(sessionData.user.password || '');
  }
}, [sessionData]);

  const editUser = api.updateUser.updateUser.useMutation();

  const handleSubmit = async (e: any) => {
    if (!sessionData?.user.userId || !sessionData) return

    e.preventDefault();

    try {
      editUser.mutate({
        id: sessionData.user.userId,
        name: name,
        email: email,
        bio: bio,
        phone: phone,
        password: password,
      })
      sessionData.user.name = name
      sessionData.user.email = email
      sessionData.user.bio = bio
      sessionData.user.phone = phone
      sessionData.user.password = password
    } catch {
      console.log('error')
    }
  }

  // const { data: secretMessage } = api.example.getSecretMessage.useQuery(
  //   undefined, // no input
  //   { enabled: sessionData?.user !== undefined }
  // );

  return (
    <>
      <button
        className={styles.loginButton}
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>

      <div className={styles.profileContainer}>
        <form onSubmit={handleSubmit}>
        <div className={styles.top}>
          <div>
            <p>Profile</p>
            <p>Some info may be visible to other people</p>
          </div>
        f</div>
        <div>
          <p>Photo</p>
          <img src={sessionData?.user.image} alt="" />
          <input type="file" src="" alt="" />
        </div>
        <div>
          <p>Name</p>
          <p>{sessionData?.user.name}</p>
          <input type="text"  onChange={(e) => setName(e.target.value)}/>
        </div>
        <div>
          <p>Bio</p>
          <p>{sessionData?.user.bio}</p>
          <input type="text" onChange={(e) => setBio(e.target.value)}/>
        </div>
        <div>
          <p>Phone</p>
          <p>{sessionData?.user.phone}</p>
          <input type="text" onChange={(e) => setPhone(e.target.value)}/>
        </div>
        <div>
          <p>Email</p>
          <p>{sessionData?.user.email}</p>
          <input type="email" onChange={(e) => setEmail(e.target.value)}/>
        </div>
        <div>
          <p>Password</p>
          <p>{sessionData?.user.password}</p>
          <input type="text" onChange={(e) => setPassword(e.target.value)}/>
        </div>
        <div>
            <button>Save</button>
        </div>
        </form>
      </div>
</>
  );
}
